name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.2.3)'
        required: true

jobs:
  publish:
    name: Publish to npm
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          registry-url: 'https://npm.pkg.github.com'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Run linting
        run: |
          npm run lint:js
          npm run lint:json

      - name: Determine version
        id: version
        run: |
          VERSION="${{ github.event.inputs.version }}"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Check if running in act
        id: check-act
        run: |
          if [[ -n "$ACT" ]]; then
            echo "running_in_act=true" >> $GITHUB_OUTPUT
            echo "üé≠ Running in act - will use dry-run mode"
          else
            echo "running_in_act=false" >> $GITHUB_OUTPUT
          fi

      - name: Update package version if needed
        if: steps.check-act.outputs.running_in_act != 'true'
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          EXPECTED_VERSION="${{ steps.version.outputs.version }}"

          if [[ "$CURRENT_VERSION" != "$EXPECTED_VERSION" ]]; then
            echo "Updating version from $CURRENT_VERSION to $EXPECTED_VERSION"
            npm version $EXPECTED_VERSION --no-git-tag-version
            git config user.name github-actions
            git config user.email github-actions@github.com
            git add package.json package-lock.json
            git commit -m "chore: bump version to $EXPECTED_VERSION"
          else
            echo "Version is already $EXPECTED_VERSION, skipping version bump"
          fi

      - name: Publish to GitHub Packages (dry-run in act)
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [[ "${{ steps.check-act.outputs.running_in_act }}" == "true" ]]; then
            echo "üé≠ Act detected - running npm publish in dry-run mode"
            npm publish --dry-run
          else
            npm publish
          fi

      - name: Create GitHub Release
        if: steps.check-act.outputs.running_in_act != 'true'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.version }}
          name: Release v${{ steps.version.outputs.version }}
          body: |
            ## üöÄ Release v${{ steps.version.outputs.version }}

            ### üì¶ Installation
            ```bash
            npm install @trafficbyintent/style-guide@${{ steps.version.outputs.version }}
            ```

            ### üìù Changelog
            See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for details.
          draft: false
          prerelease: false

      - name: Mock GitHub Release (act only)
        if: steps.check-act.outputs.running_in_act == 'true'
        run: |
          echo "üé≠ Act detected - would create GitHub release:"
          echo "  Tag: v${{ steps.version.outputs.version }}"
          echo "  Name: Release v${{ steps.version.outputs.version }}"
