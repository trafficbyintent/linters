name: Auto Tag on Version Change

on:
  push:
    branches:
      - main
    paths:
      - 'package.json'

jobs:
  auto-tag:
    name: Create tag on version change
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for tags

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Get version from package.json
        id: package-version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Current package.json version: $VERSION"

      - name: Check if tag exists
        id: tag-check
        run: |
          VERSION="${{ steps.package-version.outputs.version }}"
          if git ls-remote --tags origin | grep -q "refs/tags/v$VERSION$"; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "Tag v$VERSION already exists"
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "Tag v$VERSION does not exist"
          fi

      - name: Create and push tag
        if: steps.tag-check.outputs.exists == 'false'
        run: |
          VERSION="${{ steps.package-version.outputs.version }}"

          # Configure git
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Create annotated tag
          git tag -a "v$VERSION" -m "Release version $VERSION"

          # Push the tag
          git push origin "v$VERSION"

          echo "✅ Created and pushed tag v$VERSION"
          echo "To publish a release, manually trigger the Release workflow"

      - name: Tag already exists
        if: steps.tag-check.outputs.exists == 'true'
        run: |
          VERSION="${{ steps.package-version.outputs.version }}"
          echo "ℹ️ Tag v$VERSION already exists. No action needed."
